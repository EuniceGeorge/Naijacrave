import os
from flask import Flask, render_template, request, url_for, redirect, jsonify
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy import or_, Table, Column, Integer, ForeignKey
from sqlalchemy.orm import relationship
from sqlalchemy.sql import func
from db_model import db, Ingredient, Recipe, IngredientRecipe, Direction

app = Flask(__name__)
#mysql://username:password@host:port/database_name
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://naijacrave:crave@localhost/naijacrave'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

#db = SQLAlchemy(app)
db.init_app(app)

@app.route('/')
def home():
    return '<h1> Hello </h1>'

@app.route('/api/recipes', methods=['POST'])
def add_recipe():
    data = request.get_json()

    ingredient_ids = data.get('ingredient_ids')
    recipe_name = data.get('ingredient_id')
    directions = data.get('directions')

    new_recipe = Recipe(recipe_name=recipe_name, directions=directions)
    db.session.add(new_recipe)
    db.session.commit()

    for ing_id in ingredient_ids:
        ingredient = ingredient.query.get(ing_id)
        if ingredient:
            new_recipe.ingredients.append(ingredient)

    db.session.commit()


    return jsonify({
        "recipe_id": new_recipe.recipe_id,
        "recipe_name": new_recipe.recipe_name,
        "directions": new_recipe.directions,
        "ingredients": [{"id": ing.recipe_id, "ingredient_name": ing.ingredient_name} for ing in new_recipe.ingredients]
        })


#get all recipes
@app.route('/api/recipes', methods=['GET'])
def get_recipe():
    all_recipes = Recipe.query.all()

    if all_recipes:
        direction_list = [direction.to_dict() for direction in Recipe.directions]
        return jsonify({
            "recipe_id": recipe.recipe_id,
            "recipe_name": recipe.recipe_name,
            "directions": direction_list,
            "ingredients": [{"id": ing.ingredient_id, "ingredient_name": ing.ingredient_name} for ing in all_recipe.ingredients]
            })
    else:       
        return jsonify({"message": "Recipe not found"}), 404


if __name__ == '__main__':
    app.run(debug=True)
